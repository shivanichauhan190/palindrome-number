/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
         public List<Integer> rightSideView(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        if (root == null) return result;

        List<TreeNode> nodes = new ArrayList<>();
        nodes.add(root);

        while (!nodes.isEmpty()) {
            result.add(nodes.get(nodes.size()-1).val);

            List<TreeNode> nextLevel = new ArrayList<>();
            for(TreeNode n: nodes) {
                if (n.left != null) {
                    nextLevel.add(n.left);
                }

                if (n.right != null) {
                    nextLevel.add(n.right);
                }
            }

            nodes = nextLevel;
        }

        return result;
    }

}
