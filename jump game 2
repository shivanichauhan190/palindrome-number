class Solution {
    public int jump(int[] nums) {
        // edge cases
        if (nums.length == 1) return 0;

        int step = 0, currEnd = 0, currFarthest = 0, n = nums.length;
        for (int i = 0; i < n; i++) {
            currFarthest = Math.max(currFarthest, i + nums[i]); // how far we can reach at current step
            if (currFarthest >= n-1) return step+1; // we hit the end
            if (i == currEnd) { // we can at most reach here at current step, need one more jump
                currEnd = currFarthest;
                step++;
            }
        }

        return -1;
    }
}
